"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app
"""

import os
import sys
import shutil

dirname, filename = os.path.split(os.path.abspath(__file__))
sys.path.append(os.path.join(dirname, 'tcptrace_gui'))
from setuptools import setup
from subprocess import Popen, PIPE

APP_NAME = 'NetworkProfiler'

DATA_FILES = [
    'tcptrace_gui/pytcptrace/tcptrace'
]

OPTIONS = {
    'argv_emulation': True,
    'packages': ['pytcptrace', 'macdivert'],
    'iconfile': 'resource/icon.icns',
    'plist': {
        'CFBundleShortVersionString': '1.0.0',
        'CFBundleIconFile': 'icon.icns',
    }
}


def call_cmd(cmd_list):
    p = Popen(cmd_list, stdout=PIPE,
              stdin=PIPE, stderr=PIPE)
    p.wait()
    print '*' * 30 + 'STDOUT' + '*' * 30
    print p.stdout.read()
    print '*' * 30 + 'STDERR' + '*' * 30
    print p.stderr.read()
    print '*' * 66
    print '\n'


def cmake_build(src_dir):
    build_path = os.path.join(dirname, src_dir + '_cmake')
    source_path = os.path.join(dirname, src_dir)
    if os.path.exists(build_path):
        shutil.rmtree(build_path)
    os.mkdir(build_path)
    call_cmd(['cmake', '-B' + build_path, '-H' + source_path])
    call_cmd(['make', '-C', build_path])
    return build_path


def archive_dmg():
    call_cmd(['hdiutil', 'create', os.path.join('dist', APP_NAME + '.dmg'),
              '-srcfolder', os.path.join('dist', APP_NAME + '.app')])


# first compile the binaries and copy them
shutil.copyfile(os.path.join(cmake_build('libdivert'), 'libdivert.so'),
                os.path.join(dirname, 'macdivert', 'libdivert.so'))

shutil.copyfile(os.path.join(cmake_build('tcptrace'), 'tcptrace'),
                os.path.join(dirname, 'tcptrace_gui', 'pytcptrace', 'tcptrace'))
exit(0)

setup(
    # Application name
    name=APP_NAME,
    # Entry file
    app=['tcptrace_gui/main.py'],
    # Static data files
    data_files=DATA_FILES,
    # Other options
    options={'py2app': OPTIONS},
    # Requirements
    setup_requires=['py2app'],
)


# finally archive entire app into disk image
archive_dmg()
